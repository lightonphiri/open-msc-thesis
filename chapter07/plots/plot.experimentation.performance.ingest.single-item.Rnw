<<fig=FALSE, echo=FALSE>>=
# Author: Lighton Phiri
# Date: January 2013
# Purpose: ggplot2 line plot
# 
# File-based store ingestion performance for 
# varying directory structures --levels
# 

# import libraries 
require(tikzDevice)
require(ggplot2)
require(reshape2)
require(grid)
require(scales)
require(ggthemes)

# generate tikZ-LaTeX input file
tikz('plot.experimentation.performance.ingest.single-item.tex', width=5.5, height=3.0)

# import datafeeds
dataset <- read.table("../data/experiments-performance-ingest.dat", header=TRUE, sep=",")

# convert dataset to molten form for ggplot2
experimentdataset <- melt(dataset, id.vars=c(1))

# add dummy column for faceting
experimentdataset["yaba"] <- "Item ingestion"

# rename/normalise levels
levels(experimentdataset$variable)[levels(experimentdataset$variable)=="Level1"] <- paste("Dataset\\#1","$\\;\\;\\;$")
levels(experimentdataset$variable)[levels(experimentdataset$variable)=="Level2"] <- paste("Dataset\\#2","$\\;\\;\\;$")
levels(experimentdataset$variable)[levels(experimentdataset$variable)=="Level3"] <- paste("Dataset\\#3","$\\;\\;\\;$")

#ggplot(data=experimentdataset, aes(x=as.factor(Workload), y=value, shape=as.factor(variable), linetype=as.factor(variable), group=as.factor(variable), color=as.factor(variable))) + geom_line() + geom_point() + scale_shape_manual(values=c(18,4,13)) + scale_linetype_manual(values=c("solid","dotdash","longdash")) + scale_x_discrete(labels=c("100","200","400","800","1.6k","3.2k","6.4k","12.8k","25.6k","51.2k","102.4k","204.8k","409.6k","819.2k","1638.4k")) + labs(x="",y="")  + theme(legend.title=element_blank(), legend.position=c(0.15,0.935), legend.direction="horizontal", plot.margin=unit(c(0.2,0.15,0.05,0.05),"cm"), axis.text.x = element_text(angle=90, vjust=0.5))

# scale_y_log10(breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)))

# create colored plot
##ggplot(data=experimentdataset, aes(x=as.factor(Workload), y=value, shape=variable, linetype=variable, group=variable, color=variable)) + geom_line() + geom_point() + scale_shape_manual(values=c(18,4,13)) + scale_linetype_manual(values=c("solid","dotdash","longdash")) + scale_x_discrete(labels=c("100","200","400","800","1.6k","3.2k","6.4k","12.8k","25.6k","51.2k","102.4k","204.8k","409.6k","819.2k","1638.4k")) + labs(x="",y="")  + theme(legend.title=element_blank(), legend.position=c(0.115,0.870), plot.margin=unit(c(0.2,0.15,0.05,0.05),"cm"), axis.text.x = element_text(angle=90, vjust=0.5)) + coord_cartesian(ylim=c(0, 5.5))

# create black& white plot. Notice that you are NOT using theme_bw() here Phiri --DO NOT forget this
ggplot(data=experimentdataset, 
       aes(x=as.factor(Workload), 
           y=value, 
	   colour=variable,
           group=variable)) + 
             geom_line(aes(linetype=variable), size=1.5) + 
             geom_point(aes(shape=variable), fill="white", size=2.5) + 
             scale_shape_manual(values=c(1,4,13)) + 
             scale_linetype_manual(values=c("solid","dotdash","longdash")) + 
	     facet_wrap(~ yaba, scales="free_x") + 
             scale_x_discrete(labels=c("100","200","400","800","1.6k","3.2k","6.4k","12.8k","25.6k","51.2k","102.4k","204.8k","409.6k","819.2k","1638.4k")) + 
	     #scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
             labs(x="Workload size", y="Time [ms]")  + 
	     coord_cartesian(ylim=c(2.5, 3)) +
	     #theme_few() + scale_colour_few() +
	     #geom_rangeframe() + theme_tufte() +
	     #theme_economist() + scale_colour_economist() +
	     theme_igray() +
	     scale_colour_stata() +
             theme(legend.title=element_blank(), 
		   #legend.position=c(0.15,0.780), 
		   legend.position="bottom",
		   legend.key.height=unit(0.35,"cm"),
		   legend.text=element_text(size=8),
		   plot.margin=unit(c(0.5,0.5,0,0.8),"cm"), 
		   #plot.margin=unit(c(0.35,0.15,0.8,0.8),"cm"), 
		   #plot.margin=unit(c(0.35,0.35,0,0.2),"cm"),
		   strip.text = element_text(size=9),
		   axis.title.x = element_text(vjust=-0.8,size=10),
		   axis.title.y = element_text(vjust=-0.2,size=10),
		   axis.text = element_text(size=8),
		   axis.text.x = element_text(angle=90, vjust=0.5), 
		   axis.text.y = element_text(hjust=5)) #####+ 
             #####coord_cartesian(ylim=c(0, 3.5))
@
