<<fig=FALSE, echo=FALSE>>=
# Author: Lighton Phiri
# Date: January 2012
# Purpose: ggplot2 line plot
# 
# File-based batch indexing times
# 

# import libraries 
require(tikzDevice)
require(ggplot2)
require(reshape2)
require(grid)
require(scales)
require(gridExtra)
require(ggthemes)

# generate tikZ-LaTeX input file
#tikz('plot.experimentation.performance.indexing.index-throughput.tex', width=5.5, height=4.8) # all four index plots
tikz('plot.experimentation.performance.indexing.index-throughput.tex', width=5.5, height=8.0)

# 
# INDEX THROUGHPUT
# 

# import datafeeds
dataset <- read.table("../data/experiments-performance-index-benchmark.dat", header=TRUE, sep=",")

# convert dataset to molten form for ggplot2
experimentdataset <- melt(dataset, id.vars="Workload")

# rename variables
levels(experimentdataset$variable)[levels(experimentdataset$variable)=="Time"] <- "Time"
levels(experimentdataset$variable)[levels(experimentdataset$variable)=="Throughput"] <- "Throughput"

# 
# INDEX SIZE
# 

# import datafeeds
index_size_dataset <- read.table("../data/experiments-performance-index-size.dat", header=TRUE, sep=",")

# convert dataset to molten form for ggplot2
index_size_experimentdataset <- melt(index_size_dataset, id.vars=c(1))

# add dummy column for faceting
index_size_experimentdataset["yaba"] <- "Index size"

# rename levels
levels(index_size_experimentdataset$variable)[levels(index_size_experimentdataset$variable)=="Corpus"] <- paste("Corpus size","$\\;\\;\\;$")
levels(index_size_experimentdataset$variable)[levels(index_size_experimentdataset$variable)=="Index"] <- paste("Index size","$\\;\\;\\;$")


# 
# INCREMENTAL INDEXING
# 

# import datafeeds
incremental_index_dataset <- read.table("../data/experiments-performance-index-update.dat", header=TRUE, sep=",")

# convert dataset to molten form for ggplot2
###experimentdataset <- melt(dataset, id.vars=c(1))
incremental_index_experimentdataset <- incremental_index_dataset

# add dummy column for faceting
incremental_index_experimentdataset["yaba"] <- "Incremental Indexing"


#
##ggplot(data=experimentdataset, aes(x=as.factor(Workload), y=value, group=variable, colour=variable, linetype=variable, shape=variable)) + geom_line() + geom_point() + scale_shape_manual(values=c(13,13)) + scale_linetype_manual(values=c("solid","solid")) + facet_wrap(~ variable, scales = "free_y", ncol=1) + scale_y_log10() + scale_x_discrete(labels=c("100","200", "400", "800", "1.6k", "3.2k", "6.4k", "12.8k", "25.6k", "51.2k", "102.4k", "204.8k", "409.6k" ,"819.2k", "1638.4k")) + labs(x="", y="") + theme(legend.title=element_blank(), legend.position="none", axis.title.x=element_text(vjust=-2), plot.margin=unit(c(0.2,0.15,0.05,0.05), "cm")) + theme(axis.text.x = element_text(angle=90, vjust=0.5))

# Time colored plot
##p1 = ggplot(data=experimentdataset[experimentdataset$variable=="Time (Secs)",], aes(x=as.factor(Workload), y=value, group=1, colour=1)) + geom_line() + geom_point() + scale_shape_manual(values=c(13)) + scale_linetype_manual(values=c("solid")) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) + scale_x_discrete(labels=c("100","200", "400", "800", "1.6k", "3.2k", "6.4k", "12.8k", "25.6k", "51.2k", "102.4k", "204.8k", "409.6k" ,"819.2k", "1638.4k")) + labs(x="", y="") + theme(legend.title=element_blank(), legend.position="none", axis.title.x=element_text(vjust=-2), plot.margin=unit(c(0.2,0.15,0.05,0.05), "cm")) + theme(axis.text.x = element_text(angle=90, vjust=0.5))

# create black& white plot. Notice that you are NOT using theme_bw() here Phiri --DO NOT forget this
p1 = ggplot(data=experimentdataset[experimentdataset$variable=="Time",], 
            aes(x=as.factor(Workload), 
                y=value,
		colour=variable,
                group=variable)) + 
                  geom_line(aes(linetype=variable), size=1.5) + 
                  geom_point(aes(shape=variable), size=2.5) + 
                  scale_shape_manual(values=c(1)) + 
                  scale_linetype_manual(values=c("solid")) + 
		  facet_wrap(~ variable) +
                  scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) + 
                  scale_x_discrete(labels=c("100","200", "400", "800", "1.6k", "3.2k", "6.4k", "12.8k", "25.6k", "51.2k", "102.4k", "204.8k", "409.6k" ,"819.2k", "1638.4k")) + 
		  labs(x="Workload size", y="log10(Time [s])") + 
		  theme_igray() +
		  scale_colour_stata() +
                  theme(legend.title=element_blank(), 
			legend.position="none", 
			axis.title.x=element_text(vjust=-0.5,size=10),
			axis.title.y = element_text(vjust=-0.2,size=10),
			axis.text.x = element_text(angle=90, vjust=0.5),
			#axis.text.x=element_blank(), 
			#axis.ticks.x=element_blank(), 
			#plot.margin=unit(c(0.5,0.15,0,0.8), "cm")
			plot.margin=unit(c(0.5,0.5,0.5,0.8),"cm"))

# Throughput colored plot
##p2 = ggplot(data=experimentdataset[experimentdataset$variable=="Throughput (Docs/Sec)",], aes(x=as.factor(Workload), y=value, group=1, colour=1)) + geom_line() + geom_point() + scale_shape_manual(values=c(18)) + scale_linetype_manual(values=c("solid")) + scale_x_discrete(labels=c("100","200", "400", "800", "1.6k", "3.2k", "6.4k", "12.8k", "25.6k", "51.2k", "102.4k", "204.8k", "409.6k" ,"819.2k", "1638.4k")) + labs(x="", y="") + theme(legend.title=element_blank(), legend.position="none", axis.title.x=element_text(vjust=-2), plot.margin=unit(c(0.2,0.15,0.05,0.05), "cm")) + theme(axis.text.x = element_text(angle=90, vjust=0.5))

# create black& white plot. Notice that you are NOT using theme_bw() here Phiri --DO NOT forget this
p2 = ggplot(data=experimentdataset[experimentdataset$variable=="Throughput",], 
            aes(x=as.factor(Workload), 
                y=value,
		colour=variable,
                group=variable)) + 
                  geom_line(aes(linetype=variable), size=1.5) + 
                  geom_point(aes(shape=variable), fill="white", size=2.5) + 
                  scale_shape_manual(values=c(1)) + 
                  scale_linetype_manual(values=c("solid")) + 
		  facet_wrap(~ variable) +
                  scale_x_discrete(labels=c("100","200", "400", "800", "1.6k", "3.2k", "6.4k", "12.8k", "25.6k", "51.2k", "102.4k", "204.8k", "409.6k" ,"819.2k", "1638.4k")) + 
             labs(x="Workload size", y="Throughput [doc/s]") + 
	     theme_igray() +
	     scale_colour_stata() +
             theme(legend.title=element_blank(),
                   legend.position="none",
                   #plot.margin=unit(c(0,0.15,0.8,0.8),"cm"),
		   plot.margin=unit(c(0.5,0.5,0.5,0.8),"cm"),
		   strip.text=element_text(size=9),
                   axis.title.x = element_text(vjust=-0.8,size=10),
                   axis.title.y = element_text(vjust=-0.2,size=10),
		   axis.text = element_text(size=8),
                   axis.text.x = element_text(angle=90, vjust=0.5))

p3 = ggplot(data=index_size_experimentdataset, 
       aes(x=as.factor(Workload), 
           y=value, 
	   colour=variable,
           group=variable)) +
             geom_line(aes(linetype=variable), size=1.5) + 
             geom_point(aes(shape=variable), fill="white", size=2.5) + 
             scale_shape_manual(values=c(1,4)) + 
             scale_linetype_manual(values=c("solid","dotdash")) + 
	     facet_wrap(~ yaba, scales="free_x") +
             scale_x_discrete(labels=c("100","200","400","800","1.6k","3.2k","6.4k","12.8k","25.6k","51.2k","102.4k","204.8k","409.6k","819.2k","1638.4k")) + 
             scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) + 
             labs(x="Workload size", y="log10(Size [MB])") + 
	     theme_igray() +
	     scale_colour_stata() +
             theme(legend.title=element_blank(),
                   #legend.position=c(0.15,0.85),
		   legend.position="bottom",
		   legend.text=element_text(size=8),
		   legend.key.height=unit(0.35,"cm"),
                   #plot.margin=unit(c(0.2,0.15,0.8,0.8),"cm"),
		   plot.margin=unit(c(0.5,0.5,0,0.8),"cm"),
		   strip.text = element_text(size=9),
                   axis.title.x = element_text(vjust=-0.8,size=10),
                   axis.title.y = element_text(vjust=-0.2,size=10),
		   axis.text = element_text(size=8),
                   axis.text.x = element_text(angle=90, vjust=0.5))

p4 = ggplot(data=incremental_index_experimentdataset, 
       aes(x=as.factor(Workload), 
           y=Time, 
	   colour=as.factor(BatchSize),
           group=as.factor(BatchSize))) + 
             geom_line(aes(linetype=as.factor(BatchSize)), size=1.5) + 
             geom_point(aes(shape=as.factor(BatchSize)), fill="white", size=2.5) + 
             scale_shape_manual(values=c(1,4,13,23)) + 
             scale_linetype_manual(values=c("solid","dotdash","longdash","dotted")) + 
	     facet_wrap(~ yaba, scales="free_x") +
             scale_x_discrete(labels=c("100","200","400","800","1.6k","3.2k","6.4k","12.8k","25.6k","51.2k","102.4k","204.8k","409.6k","819.2k","1638.4k")) + 
             scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
             labs(x="Workload size",y="log10(Time [ms])")  + 
	     theme_igray() +
	     scale_colour_stata() +
             theme(legend.title=element_blank(), 
		   #legend.position=c(0.25,0.78), 
		   #legend.direction="horizontal",
		   legend.position="bottom",
		   legend.text=element_text(size=8),
		   legend.key.height=unit(0.35,"cm"),
		   #plot.margin=unit(c(0.2,0.15,0.8,0.8),"cm"),
		   plot.margin=unit(c(0.5,0.5,0,0.8),"cm"),
  		   strip.text = element_text(size=9),
		   axis.title.x = element_text(vjust=-0.8,size=10),
		   axis.title.y = element_text(vjust=-0.2,size=10),
		   axis.text = element_text(size=8),
		   axis.text.x = element_text(angle=90, vjust=0.5))

# call gridExtra for multiplot combination
#grid.arrange(p1, p2, p3, p4, nrow=2)
grid.arrange(p3, p1, p2, nrow=3)
@
